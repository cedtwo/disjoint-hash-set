var searchIndex = JSON.parse('{\
"disjoint_hash_set":{"doc":"","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["DisjointHashSet","new","contains","insert","is_linked","link","sets","from","into","borrow","borrow_mut","try_from","try_into","type_id","fmt","from_iter"],"q":["disjoint_hash_set","","","","","","","","","","","","","","",""],"d":["A disjoint set / union-find data structure suitable for …","Creates an empty <code>DisjointHashSet</code>.","Check if the value has already been inserted.","Insert the value as a new disjoint set with a single …","Checks if the two keys are members of the same set. This …","Link the respective sets of the two provided values. This …","Consumes the DisjointHashSet and returns an iterator of …","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[]],[[["borrow",8]],["bool",15]],[[],["bool",15]],[[["borrow",8]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],["result",6]],[[["intoiterator",8]]]],"p":[[3,"DisjointHashSet"]]}\
}');
initSearch(searchIndex);